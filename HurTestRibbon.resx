<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnInsertNumeric.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>